{
  "paragraphs": [
    {
      "text": "%md\n## Variable-Length Paths\nPlease visit [the relevant section in pgql-lang.org](https://pgql-lang.org/spec/1.3/#variable-length-paths) for more details.\n\n![](https://user-images.githubusercontent.com/4862919/88672488-7cbbd800-d122-11ea-9a9f-12302837cf92.jpg)",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:06:44.698",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eVariable-Length Paths\u003c/h2\u003e\n\u003cp\u003ePlease visit \u003ca href\u003d\"https://pgql-lang.org/spec/1.3/#variable-length-paths\"\u003ethe relevant section in pgql-lang.org\u003c/a\u003e for more details.\u003c/p\u003e\n\u003cp\u003e\u003cimg src\u003d\"https://user-images.githubusercontent.com/4862919/88672488-7cbbd800-d122-11ea-9a9f-12302837cf92.jpg\" /\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1595943157208_1455213789",
      "id": "20200303-214034_1675571787",
      "dateCreated": "2020-07-28 13:32:37.209",
      "dateStarted": "2020-07-28 15:06:44.700",
      "dateFinished": "2020-07-28 15:06:44.727",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load graph",
      "text": "%pgx\ngraph \u003d session.readGraphWithProperties(\"/graphs/pgql_financial/config.json\")",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:05:42.460",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595943157229_-1573905017",
      "id": "20200728-114724_335653543",
      "dateCreated": "2020-07-28 13:32:37.229",
      "dateStarted": "2020-07-28 15:05:42.689",
      "dateFinished": "2020-07-28 15:05:42.880",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Quantifiers",
      "text": "%pgx\n// Find a shortest path from account 10039 to account 2090, following only transaction edges\ngraph.queryPgql(\"\"\"\nSELECT a.number AS a,\n       b.number AS b,\n       COUNT(e) AS pathLength,\n       ARRAY_AGG(e.amount) AS amounts\n  FROM MATCH SHORTEST ( (a:Account) -[e:transaction]-\u003e* (b:Account) )\n WHERE a.number \u003d 10039 AND b.number \u003d 2090\n\"\"\");",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:05:42.974",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 84.78125,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "b": "string",
                      "pathLength": "string",
                      "amounts": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595943157249_-273805242",
      "id": "20200302-212041_1026051053",
      "dateCreated": "2020-07-28 13:32:37.249",
      "dateStarted": "2020-07-28 15:05:43.072",
      "dateFinished": "2020-07-28 15:05:43.258",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Horizontal aggregation using group variables",
      "text": "%pgx\n// Find the shortest paths from 10039 to two accounts, 1001 and 2090, then return the sum of the path lengths\ngraph.queryPgql(\"\"\"\nSELECT SUM(COUNT(e)) AS sumOfPathLengths\n  FROM MATCH SHORTEST ( (a:Account) -[e:transaction]-\u003e* (b:Account) )\n WHERE a.number \u003d 10039 AND (b.number \u003d 1001 OR b.number \u003d 2090)\n\"\"\");",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:05:43.272",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 92.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "sumOfPathLengths": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595943157249_2112880173",
      "id": "20200303-211616_495605545",
      "dateCreated": "2020-07-28 13:32:37.249",
      "dateStarted": "2020-07-28 15:05:43.420",
      "dateFinished": "2020-07-28 15:05:43.657",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Horizontal aggregation in WHERE",
      "text": "%pgx\n// Find the shortest paths from 10039 to three accounts, 8021, 1001, and 2090, then return the paths whose lengths are equal of smaller than 2\ngraph.queryPgql(\"\"\"\n  SELECT b.number AS b,\n         COUNT(e) AS pathLength,\n         ARRAY_AGG(e.amount) AS transactions\n    FROM MATCH SHORTEST ( (a:Account) -[e:transaction]-\u003e* (b:Account) )\n   WHERE a.number \u003d 10039 AND\n         (b.number \u003d 8021 OR b.number \u003d 1001 OR b.number \u003d 2090) AND\n         COUNT(e) \u003c\u003d 2\nORDER BY pathLength\n\"\"\");",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:05:43.713",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 108.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "b": "string",
                      "pathLength": "string",
                      "transactions": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595943157250_-1387238200",
      "id": "20200303-223141_283396721",
      "dateCreated": "2020-07-28 13:32:37.250",
      "dateStarted": "2020-07-28 15:05:43.858",
      "dateFinished": "2020-07-28 15:05:44.861",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Horizontal aggregation in GROUP BY",
      "text": "%pgx\n// Find the 4 shortest paths in the combinations of accounts, and aggregate and sort by the path lengths\ngraph.queryPgql(\"\"\"\n  SELECT COUNT(e) AS pathLength,\n         COUNT(*) AS cnt\n    FROM MATCH SHORTEST ( (a:Account) -[e:transaction]-\u003e* (b:Account) )\n   WHERE (a.number \u003d 10039 OR a.number \u003d 8021) AND\n         (b.number \u003d 1001 OR b.number \u003d 2090)\nGROUP BY COUNT(e)\nORDER BY pathLength\n\"\"\");",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:05:44.966",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 168.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "pathLength": "string",
                      "cnt": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595943157250_1817643748",
      "id": "20200728-121529_1649623286",
      "dateCreated": "2020-07-28 13:32:37.250",
      "dateStarted": "2020-07-28 15:05:45.038",
      "dateFinished": "2020-07-28 15:05:45.684",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Single Shortest Path",
      "text": "%pgx\n// Return the account number or person\u0027s name of the nodes on the path\ngraph.queryPgql(\"\"\"\n  SELECT COUNT(e) AS num_hops\n       , p1.name AS start\n       , ARRAY_AGG ( CASE\n                       WHEN has_label(dst, \u0027Account\u0027)\n                         THEN CAST(dst.number AS STRING)\n                       ELSE dst.name\n                     END\n                   ) AS path\n    FROM MATCH SHORTEST ( (p1:Person) (-[e]- (dst))* (p2:Person) )\n   WHERE p1.name \u003d \u0027Camille\u0027 AND p2.name \u003d \u0027Liam\u0027\nORDER BY num_hops\n\"\"\");",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:05:45.691",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 104.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "num_hops": "string",
                      "start": "string",
                      "path": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595943157255_-1581994624",
      "id": "20200728-121543_851814387",
      "dateCreated": "2020-07-28 13:32:37.255",
      "dateStarted": "2020-07-28 15:05:45.901",
      "dateFinished": "2020-07-28 15:05:46.128",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Top-K Shortest Path (1)",
      "text": "%pgx\n// Return top 7 shortest paths starting and ending at the same account\ngraph.queryPgql(\"\"\"\n  SELECT COUNT(e) AS num_hops\n       , SUM(e.amount) AS total_amount\n       , ARRAY_AGG(e.amount) AS amounts_along_path\n    FROM MATCH TOP 7 SHORTEST ( (a:Account) -[e:transaction]-\u003e* (b:Account) )\n   WHERE a.number \u003d 10039 AND a \u003d b\nORDER BY num_hops, total_amount\n\"\"\");",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:05:46.200",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 366.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "num_hops": "string",
                      "total_amount": "string",
                      "amounts_along_path": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595943157255_-1644446158",
      "id": "20200728-121544_355739833",
      "dateCreated": "2020-07-28 13:32:37.256",
      "dateStarted": "2020-07-28 15:05:46.242",
      "dateFinished": "2020-07-28 15:05:46.365",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Top-K Shortest Path (2)",
      "text": "%pgx\n// From the result above, remove zero length path and the paths visit the same edges multiple times\ngraph.queryPgql(\"\"\"\n  SELECT COUNT(e) AS num_hops\n       , SUM(e.amount) AS total_amount\n       , ARRAY_AGG(e.amount) AS amounts_along_path\n    FROM MATCH TOP 7 SHORTEST ( (a:Account) -[e:transaction]-\u003e* (b:Account) )\n   WHERE a.number \u003d 10039 AND a \u003d b AND COUNT(DISTINCT e) \u003d COUNT(e) AND COUNT(e) \u003e 0\nORDER BY num_hops, total_amount\n\"\"\");",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:05:46.442",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 122.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "num_hops": "string",
                      "total_amount": "string",
                      "amounts_along_path": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595943157256_1419526150",
      "id": "20200728-121546_290505134",
      "dateCreated": "2020-07-28 13:32:37.256",
      "dateStarted": "2020-07-28 15:05:46.742",
      "dateFinished": "2020-07-28 15:05:46.859",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Scalar subqueries",
      "text": "%pgx\n// For each person, the subquery results are collected as scalar values \ngraph.queryPgql(\"\"\"\n  SELECT p.name AS name\n       , ( SELECT SUM(t.amount)\n             FROM MATCH (a) \u003c-[t:transaction]- (:Account)\n         ) AS sum_incoming\n       , ( SELECT SUM(t.amount)\n             FROM MATCH (a) -[t:transaction]-\u003e (:Account)\n         ) AS sum_outgoing\n       , ( SELECT COUNT(DISTINCT p2)\n             FROM MATCH (a) -[t:transaction]- (:Account) \u003c-[:ownerOf]- (p2:Person)\n            WHERE p2 \u003c\u003e p\n         ) AS num_persons_transacted_with\n       , ( SELECT COUNT(DISTINCT c)\n             FROM MATCH (a) -[t:transaction]- (:Account) \u003c-[:ownerOf]- (c:Company)\n         ) AS num_companies_transacted_with\n    FROM MATCH (p:Person) -[:ownerOf]-\u003e (a:Account)\nORDER BY sum_outgoing + sum_incoming DESC\n\"\"\");",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:05:46.942",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 152.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "sum_incoming": "string",
                      "sum_outgoing": "string",
                      "num_persons_transacted_with": "string",
                      "num_companies_transacted_with": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595943157256_-253358280",
      "id": "20200728-121547_1437981992",
      "dateCreated": "2020-07-28 13:32:37.256",
      "dateStarted": "2020-07-28 15:05:46.980",
      "dateFinished": "2020-07-28 15:05:47.252",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nEnd of Document",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:06:47.511",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eEnd of Document\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1595943157257_395250793",
      "id": "20200728-124156_1934077650",
      "dateCreated": "2020-07-28 13:32:37.258",
      "dateStarted": "2020-07-28 15:06:47.512",
      "dateFinished": "2020-07-28 15:06:47.531",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2020-07-28 15:05:47.286",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595948747281_266087153",
      "id": "20200728-150547_1686606161",
      "dateCreated": "2020-07-28 15:05:47.282",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Learning PGQL (2)",
  "id": "2FF2QZ922",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "pgx:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}